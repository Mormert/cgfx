name: CMake-Windows

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release
  SCCACHE_GHA_ENABLED: "true"

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Update Git Submodules
        run: git submodule update --init --recursive

      - name: Enable Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1.12.1


      - name: Ccache for gh actions
        uses: hendrikmuhs/ccache-action@v1.2.9
        with:
          key: win-${{env.BUILD_TYPE}}

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake cgfx -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_EDITOR=OFF -G Ninja -DCMAKE_CXX_COMPILER=cl -DCMAKE_C_COMPILER=cl -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_CXX_COMPILER_LAUNCHER=sccache

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{env.BUILD_TYPE}}

      - uses: actions/upload-artifact@v2
        with:
          name: ${{env.BUILD_TYPE}}
          path: |
            build/**/*.exe
            build/**/EditorResources
            build/**/EngineResources
            build/**/GameResources
            !build/**/CMakeFiles
